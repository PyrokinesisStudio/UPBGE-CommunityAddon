/**
 * Toon Lines 2 shader by Robert Planas (elmeunick9)
 * Based on Toon Lines by Jose I. Romero (cyborg_ar)
 *
 * Based on blender's built-in "prewitt" filter which is free software
 * released under the terms of the GNU General Public License version 2
 * 
 * The original code is (c) Blender Foundation.
 */
 
uniform sampler2D bgl_RenderedTexture;
uniform vec2 bgl_TextureCoordinateOffset[9];

uniform float brightness; // = 1.0;
uniform float threshold; // = 0.2;
uniform int mode; // = 1;
uniform vec4  border_color; // = Vec4(0.0);

void main(void)
{
	
	vec4 sample[9];
	vec4 border;
	vec4 texcol = texture2D(bgl_RenderedTexture, gl_TexCoord[0].st);

	/* Detect border */
	for (int i = 0; i < 9; i++) sample[i] = texture2D(bgl_RenderedTexture, gl_TexCoord[0].st + bgl_TextureCoordinateOffset[i]);
	vec4 horizEdge = sample[2] + sample[5] + sample[8] - (sample[0] + sample[3] + sample[6]);
	vec4 vertEdge  = sample[0] + sample[1] + sample[2] - (sample[6] + sample[7] + sample[8]);
	border.rgb = sqrt((horizEdge.rgb * horizEdge.rgb) + (vertEdge.rgb * vertEdge.rgb));

	/*Line Color & Smooth*/
	float intensity = 0.2;
	float alpha = 0.0;
	
	float cho;
	if (mode)	cho = (3-border.r-border.g-border.b)/3;
	else		cho = (border.r > threshold || border.g > threshold || border.b > threshold) ? 0.0 : 1.0;
	
	vec3 cLine = mix(border_color.rgb, texcol.rgb, alpha + border_color.a);
	vec3 cElse = texcol.rgb * vec3(brightness);
	
	gl_FragColor.rgb = mix(cLine, cElse, cho);
	gl_FragColor.a = 1.0;
}